" Comments in Vimscript start with a `"`.

" If you open this file in Vim, it'll be syntax highlighted for you.

" Vim is based on Vi. Setting `nocompatible` switches from the default
" Vi-compatibility mode and enables useful Vim functionality. This
" configuration option turns out not to be necessary for the file named
" '~/.vimrc', because Vim automatically enters nocompatible mode if that file
" is present. But we're including it here just in case this config file is
" loaded some other way (e.g. saved as `foo`, and then Vim started with
" `vim -u foo`).
set nocompatible

" Plug add-on installs
" ====================
call plug#begin('~/.vim/plugged')

" Atom Onedark color
Plug 'joshdick/onedark.vim'

" git diff on sidebar
Plug 'airblade/vim-gitgutter'

" better syntax highlighting
Plug 'sheerun/vim-polyglot'

" airline themes
Plug 'vim-airline/vim-airline-themes'

" statusline constructor
Plug 'vim-airline/vim-airline'

" file explorer view
Plug 'preservim/nerdtree'

" git plugin for nerdtree
Plug 'Xuyuanp/nerdtree-git-plugin'

" git plugin for vim
Plug 'tpope/vim-fugitive'

" block commenter plugin
Plug 'preservim/nerdcommenter'

" various file icons
Plug 'ryanoasis/vim-devicons'

" Latex plugin
Plug 'lervag/vimtex'

" Autoclose brackets
Plug 'jiangmiao/auto-pairs'

" Persistent scratch buffer for quick text edits
Plug 'mtth/scratch.vim'

call plug#end()

" Onedark.vim theme setup
" =======================
"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  if (has("termguicolors"))
    set termguicolors
  endif
endif

" Turn on syntax highlighting.
syntax on

" Apply bubblegum color theme
colorscheme onedark

" Quality of Life changes
" =======================
" Disable the default Vim startup message.
set shortmess+=I

" Show line numbers.
set number

" This enables relative line numbering mode. With both number and
" relativenumber enabled, the current line shows the true line number, while
" all other lines (above and below) are numbered relative to the current line.
" This is useful because you can tell, at a glance, what count is needed to
" jump up or down to a particular line, by {count}k to go up or {count}j to go
" down.
set relativenumber

" Set maximum line width to 100. Characters after 100 are wrapped.
set textwidth=80

" Highlight the line limit
set cc=81

" Always show the status line at the bottom, even if you only have one window
" open.
set laststatus=2

" The backspace key has slightly unintuitive behavior by default. For example,
" by default, you can't backspace before the insertion point set with 'i'.
" This configuration makes backspace behave more reasonably, in that you can
" backspace over anything.
set backspace=indent,eol,start

" This setting makes search case-insensitive when all characters in the string
" being searched are lowercase. However, the search becomes case-sensitive if
" it contains any capital letters. This makes searching more convenient.
set ignorecase
set smartcase

" Enable searching as you type, rather than waiting till you press enter.
set incsearch

" Unbind some useless/annoying default key bindings.
nmap Q <Nop> " 'Q' in normal mode enters Ex mode. You almost never want this.

" Disable audible bell because it's annoying.
set noerrorbells visualbell t_vb=

" Enable mouse support. You should avoid relying on this too much, but it can
" sometimes be convenient.
set mouse+=a

" Set IBeam cursor in insert mode, underline cursor in replace mode, and block
" cursor in normal mode 
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" allow copying to clipboard
set clipboard=unnamedplus

" tab settings
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" NERDtree setup
" ==============
" bind to open nerdtree
nmap <C-n> :NERDTreeToggle<CR>

" autoclose on file open
let NERDTreeQuitOnOpen=1

" remove help text
let g:NERDTreeMinimalUI = v:true

" Airline setup
" =============
" set the airline theme
let g:airline_theme='bubblegum'
" branch parts
let g:airline_enable_branch=1
let g:airline_powerline_fonts = 1
" disable trailing whitespace check
let g:airline#extensions#whitespace#checks = []
" Do not show encoding if it's the usual utf-8
let g:airline#parts#ffenc#skip_expected_string = 'utf-8[unix]'
" Skip empty sections
let g:airline_skip_empty_sections = 1
" separators
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = '☰ '
let g:airline_symbols.maxlinenr = ' col' "''
let g:airline_symbols.dirty='⚡'

" avoid pause when leaving insert mode
set ttimeoutlen=10

" GitGutter setup
" ===============
" Let GitGutter update more often
set updatetime=100
" Show the sign column always
set signcolumn=yes
" Set the symbols used to blocks
let g:gitgutter_sign_added = '█'
let g:gitgutter_sign_modified = '█'
let g:gitgutter_sign_removed = '█'

" devicons setup
" ==============
set encoding=utf8

" vimtex setup
" ============
let g:tex_flavor='latex'
let g:latex_view_general_viewer = 'zathura'
let g:vimtex_view_method='zathura'
let g:vimtex_quickfix_mode=0

" sctach.vim setup
" ================
let g:scratch_autohide = &hidden
let g:scratch_insert_autohide = 1

